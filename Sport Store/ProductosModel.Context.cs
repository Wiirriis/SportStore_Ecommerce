//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sport_Store
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ecommerceEntities : DbContext
    {
        public ecommerceEntities()
            : base("name=ecommerceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<articulo> articulo { get; set; }
        public virtual DbSet<carrito_de_compra> carrito_de_compra { get; set; }
        public virtual DbSet<categoria> categoria { get; set; }
        public virtual DbSet<cliente> cliente { get; set; }
        public virtual DbSet<detalle_factura> detalle_factura { get; set; }
        public virtual DbSet<direccion> direccion { get; set; }
        public virtual DbSet<empleado> empleado { get; set; }
        public virtual DbSet<factura> factura { get; set; }
        public virtual DbSet<proveedor> proveedor { get; set; }
        public virtual DbSet<usuario> usuario { get; set; }
        public virtual DbSet<ubicacion> ubicacion { get; set; }
    
        public virtual int SP_AgregarUsuario(string usuario, string email, string pass, string patron)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var patronParameter = patron != null ?
                new ObjectParameter("Patron", patron) :
                new ObjectParameter("Patron", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AgregarUsuario", usuarioParameter, emailParameter, passParameter, patronParameter);
        }
    
        public virtual ObjectResult<SP_TraerProductos_Result> SP_TraerProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TraerProductos_Result>("SP_TraerProductos");
        }
    
        public virtual ObjectResult<SP_ValidarUsuario_Result> SP_ValidarUsuario(string usuario, string pass, string patron)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var patronParameter = patron != null ?
                new ObjectParameter("Patron", patron) :
                new ObjectParameter("Patron", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ValidarUsuario_Result>("SP_ValidarUsuario", usuarioParameter, passParameter, patronParameter);
        }
    }
}
